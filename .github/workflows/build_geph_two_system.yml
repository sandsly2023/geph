name: build geph two system

on:
  workflow_dispatch:

jobs:
  del_runs:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2

  build_debian12_geph:
    name: Build_Debian12
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Run Docker container to compile assets
        uses: addnab/docker-run-action@v3
        with:
          image: debian:12
          options: -v ${{ github.workspace }}:/var/www
          run: |
            # 更新并安装基本依赖
            apt update && apt install -y \
              build-essential pkg-config curl git wget \
              libgtk-3-dev libappindicator3-dev libwebkit2gtk-4.1-dev \
              librsvg2-dev libssl-dev patchelf strace \
              libpango1.0-dev libgdk-pixbuf2.0-dev \
              gcc g++ zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev make \
              ca-certificates libsoup2.4-dev
            
            # 确保 pkg-config 可以找到 webkit2gtk-4.0
            export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH"
            pkg-config --modversion webkit2gtk-4.0 || exit 1
            
            # 安装 Rust
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            export PATH="$HOME/.cargo/bin:$PATH"
            
            # 安装 Node.js 及 npm/yarn
            curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
            apt install -y nodejs
            npm install -g yarn
            
            # 拉取迷雾通 gephgui-wry 源码
            git clone --recurse-submodules https://github.com/geph-official/gephgui-wry.git
            
            # 编译 gephgui-wry GUI
            cd gephgui-wry/gephgui
            npm install
            npm run build
          
            # 编译 gephgui-wry Rust 代码
            cd /gephgui-wry
            cargo build --release
            cp /gephgui-wry/target/release/gephgui-wry /var/www
            cat /etc/os-release > /var/www/lsb_release
      
      - name: Create build folder
        run: |
          mkdir ./build
          cp lsb_release ./build
      
      - name: Copy gephgui-wry
        run: |
          mv gephgui-wry ./build
      
      - name: Download gephgui-pkg
        run: |
          git clone https://github.com/geph-official/gephgui-pkg.git
          cp -r gephgui-pkg/blobs/linux-x64/* ./build && cd ./build
          bash -x pull-geph4-client.sh
          mv ./pac-real ./pac
          rm -rf ./pkexec ./pull-geph4-client.sh
      
      - name: Set environment variables
        run: |
          echo "action_state=$(cat ./VERSION)" >> "$GITHUB_ENV"
          echo "ubu_release=$(cat lsb_release | grep VERSION_ID | awk -F '"' '{print $2}' | tr -d ".")" >> "$GITHUB_ENV"
          rm -rf lsb_release
      
      - name: Create TAR archive
        run: |
          tar -Jcvf build_"${{ env.action_state }}"_ubu"${{ env.ubu_release }}".tar.xz ./build
          FILE=./build_"${{ env.action_state }}"_ubu"${{ env.ubu_release }}".tar.xz
          DGST=$FILE.dgst
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          mkdir release && cp build_*.tar.xz* ./release
      
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/*
          tag: geph4_${{ env.action_state }}
          overwrite: true
          file_glob: true

